{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Code/Antara_interview/frontend/patient_tracker/src/Patient.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PatientInfo() {\n  _s();\n\n  // Polling: provides near-real-time synchronization with\n  // your server by causing a query to execute periodically\n  // at a specified interval\n  const {\n    data,\n    loading\n  } = useQuery(QUERY_USERS, {\n    pollInterval: 500 // refetch the result every 0.5 second\n\n  }); // should handle loading status\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 25\n  }, this);\n  return data.users.map(({\n    id,\n    firstName,\n    lastName\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User - \", id, \": \", firstName, \" \", lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this));\n}\n\n_s(PatientInfo, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", true);\n\n_c = PatientInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientInfo\");","map":{"version":3,"sources":["/Users/chris/Code/Antara_interview/frontend/patient_tracker/src/Patient.js"],"names":["PatientInfo","data","loading","useQuery","QUERY_USERS","pollInterval","users","map","id","firstName","lastName"],"mappings":";;;;AAAA,OAAO,SAASA,WAAT,GAAuB;AAAA;;AAC1B;AACA;AACA;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBC,QAAQ,CAChCC,WADgC,EACnB;AACXC,IAAAA,YAAY,EAAE,GADH,CACO;;AADP,GADmB,CAAlC,CAJ0B,CAU1B;;AACA,MAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,SAAOD,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,SAAN;AAAiBC,IAAAA;AAAjB,GAAD,kBACpB;AAAA,2BACE;AAAA,4BACUF,EADV,QACgBC,SADhB,OAC4BC,QAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAUF,EAAV;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD;;GApBaR,W;;KAAAA,W","sourcesContent":["export function PatientInfo() {\n    // Polling: provides near-real-time synchronization with\n    // your server by causing a query to execute periodically\n    // at a specified interval\n    const { data, loading } = useQuery(\n      QUERY_USERS, {\n        pollInterval: 500 // refetch the result every 0.5 second\n      }\n    );\n    \n    // should handle loading status\n    if (loading) return <p>Loading...</p>;\n     \n    return data.users.map(({ id, firstName, lastName }) => (\n      <div key={id}>\n        <p>\n          User - {id}: {firstName} {lastName}\n        </p>\n      </div>\n    ));\n  }"]},"metadata":{},"sourceType":"module"}