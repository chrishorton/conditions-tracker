{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Code/Antara_interview/frontend/patient_tracker/src/Patient.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_PATIENTS } from './queries.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PatientInfo() {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useQuery(QUERY_PATIENTS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 25\n  }, this);\n  return data.patients.map(({\n    id,\n    firstName,\n    lastName,\n    age,\n    contactInfo,\n    gender,\n    avatar\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Patient - \", id, \": \", firstName, \" \", lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this));\n}\n\n_s(PatientInfo, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = PatientInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientInfo\");","map":{"version":3,"sources":["/Users/chris/Code/Antara_interview/frontend/patient_tracker/src/Patient.js"],"names":["React","useQuery","useMutation","QUERY_PATIENTS","PatientInfo","data","loading","patients","map","id","firstName","lastName","age","contactInfo","gender","avatar"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAE1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBL,QAAQ,CAChCE,cADgC,CAAlC;AAIA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,SAAOD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,SAAN;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,GAA3B;AAAgCC,IAAAA,WAAhC;AAA6CC,IAAAA,MAA7C;AAAqDC,IAAAA;AAArD,GAAD,kBACvB;AAAA,2BACE;AAAA,+BACaN,EADb,QACmBC,SADnB,OAC+BC,QAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAUF,EAAV;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAOD;;GAfaL,W;UAEcH,Q;;;KAFdG,W","sourcesContent":["import React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_PATIENTS } from './queries.js'\n\nexport function PatientInfo() {\n\n    const { data, loading } = useQuery(\n      QUERY_PATIENTS\n    );\n    \n    if (loading) return <p>Loading...</p>;\n     \n    return data.patients.map(({ id, firstName, lastName, age, contactInfo, gender, avatar }) => (\n      <div key={id}>\n        <p>\n          Patient - {id}: {firstName} {lastName}\n        </p>\n      </div>\n    ));\n  }"]},"metadata":{},"sourceType":"module"}